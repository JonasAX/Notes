Set up
    criar database
        create database byte_bank;
        use byte_bank
    criar tabela conta
        CREATE TABLE `conta` (
        `numero` int NOT NULL,
        `saldo` decimal(10,0) DEFAULT NULL,
        `cliente_nome` varchar(50) DEFAULT NULL,
        `cliente_cpf` varchar(11) DEFAULT NULL,
        `cliente_email` varchar(50) DEFAULT NULL,
        PRIMARY KEY (`numero`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
    adicionar ao maven do projeto a dependência mysql-connector-java
        pesquisar mysql no mvnrepo
        add ao pom.xml
    reload maven project
        select maven na toolbar direita (intellij)
        reload button
    boilerplate para o mysql
        try {
            Connection connection = DriverManager
                    .getConnection("jdbc:mysql://localhost:3306/byte_bank?user=root&password=wsl4321");
            System.out.println("Conexão recuperada");
            connection.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    boilerplate para centralizar em um ponto a abertura de conexões
        public class ConnectionFactory {
            public Connection recuperarConexao() {
                try {
                    return DriverManager
                            .getConnection("jdbc:mysql://localhost:3306/byte_bank?user=root&password=wsl4321");
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        }
SQL no java
    java.sql.DriverManager.getConnection()
        return java.sql.Connection
        "jdbc:mysql://localhost/loja_virtual?useTimezone=true&serverTimezone=UTC", "root", "root"
    java.sql.Connection
        bifurca em .createStatement()
            return java.sql.Statement
        .close()
    java.sql.Connection.createStatement().execute()
        return boolean
        true = se for lista
        false = se não tiver retorno: update, delete, insert
     java.sql.Connection.createStatement().execute().getResultSet()
        return ResultSet (que é o conteúdo)
    se eu fechar a conexão, eu fecho o resultSet. Não precisa fechar o resultSet
